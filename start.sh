#!/bin/bash

echo "๐ฆ Starting Banking ELK Test Environment..."
echo "======================================"

# ะัะพะฒะตััะตะผ, ััะพ Docker ะทะฐะฟััะตะฝ
if ! docker info >/dev/null 2>&1; then
    echo "โ Docker ะฝะต ะทะฐะฟััะตะฝ! ะะพะถะฐะปัะนััะฐ, ะทะฐะฟัััะธัะต Docker Desktop."
    exit 1
fi

# ะัะพะฒะตััะตะผ docker-compose
if ! command -v docker-compose &> /dev/null; then
    echo "โ docker-compose ะฝะต ะฝะฐะนะดะตะฝ! ะะพะถะฐะปัะนััะฐ, ัััะฐะฝะพะฒะธัะต docker-compose."
    exit 1
fi

echo "โ Docker ะธ docker-compose ะดะพัััะฟะฝั"

# ะััะฐะฝะฐะฒะปะธะฒะฐะตะผ ัััะตััะฒัััะธะต ะบะพะฝัะตะนะฝะตัั ะตัะปะธ ะตััั
echo "๐ ะััะฐะฝะฐะฒะปะธะฒะฐะตะผ ัััะตััะฒัััะธะต ะบะพะฝัะตะนะฝะตัั..."
docker-compose down

# ะกะพะทะดะฐะตะผ ะฝะตะพะฑัะพะดะธะผัะต ะฟะฐะฟะบะธ
echo "๐ ะกะพะทะดะฐะตะผ ะฟะฐะฟะบะธ ะดะปั ะปะพะณะพะฒ..."
mkdir -p logs

# ะะฐะฟััะบะฐะตะผ ะฒัะต ัะตัะฒะธัั
echo "๐ ะะฐะฟััะบะฐะตะผ ะฒัะต ัะตัะฒะธัั..."
docker-compose up -d

if [ $? -ne 0 ]; then
    echo "โ ะัะธะฑะบะฐ ะทะฐะฟััะบะฐ! ะัะพะฒะตัััะต ะฟะพััั ะธะปะธ ะฟะฐะผััั Docker."
    exit 1
fi

echo ""
echo "โ ะกะตัะฒะธัั ะทะฐะฟััะตะฝั!"
echo ""
echo "๐ง ะะฒัะพะฝะฐัััะพะนะบะฐ Kibana..."
echo "ะกะพะทะดะฐัััั Data Views ะธ ะดะฐัะฑะพัะดั ะฐะฒัะพะผะฐัะธัะตัะบะธ."
echo ""
echo "โณ ะะถะธะดะฐะฝะธะต ะฟะพะปะฝะพะน ะธะฝะธัะธะฐะปะธะทะฐัะธะธ (3-4 ะผะธะฝััั)..."
echo ""

# ะะดะตะผ ะทะฐะฟััะบะฐ Elasticsearch
echo "๐ ะะถะธะดะฐะฝะธะต Elasticsearch..."
while ! curl -s http://localhost:9200/_cluster/health >/dev/null 2>&1; do
    echo "   Elasticsearch ะตัะต ะฝะต ะณะพัะพะฒ, ะถะดะตะผ..."
    sleep 5
done
echo "โ Elasticsearch ะทะฐะฟััะตะฝ"

# ะะดะตะผ ะทะฐะฟััะบะฐ Kibana
echo "๐ ะะถะธะดะฐะฝะธะต Kibana..."
while ! curl -s http://localhost:5601/api/status >/dev/null 2>&1; do
    echo "   Kibana ะตัะต ะฝะต ะณะพัะพะฒะฐ, ะถะดะตะผ..."
    sleep 5
done
echo "โ Kibana ะทะฐะฟััะตะฝะฐ"

# ะะดะตะผ ะทะฐะฟััะบะฐ Grafana
echo "๐ ะะถะธะดะฐะฝะธะต Grafana..."
while ! curl -s http://localhost:3000/api/health >/dev/null 2>&1; do
    echo "   Grafana ะตัะต ะฝะต ะณะพัะพะฒะฐ, ะถะดะตะผ..."
    sleep 5
done
echo "โ Grafana ะทะฐะฟััะตะฝะฐ"

echo ""
echo "๐ ะัะต ัะตัะฒะธัั ะทะฐะฟััะตะฝั! ะขะตะฟะตัั ะผะพะถะฝะพ ะพัะบััะฒะฐัั ะธะฝัะตััะตะนัั:"
echo ""
echo "๐ Kibana:      http://localhost:5601"
echo "๐ Grafana:     http://localhost:3000 (admin/admin)"
echo "๐ Prometheus:  http://localhost:9090"
echo "โก Elasticsearch: http://localhost:9200"
echo ""
echo "๐ก ะะตะฝะตัะฐัะพัั ะปะพะณะพะฒ ัะถะต ัะฐะฑะพัะฐัั ะฒ ัะพะฝะต!"
echo "๐ก ะะฐะฝะฝัะต ะธ ะดะฐัะฑะพัะดั ะฟะพัะฒัััั ัะตัะตะท 3-4 ะผะธะฝััั."
echo "๐ก ะัะพะฒะตัััะต ะฟัะพะณัะตัั: docker logs setup-init"
echo ""
echo "๐ ะัะบัะพะนัะต README.md ะดะปั ะฒัะฟะพะปะฝะตะฝะธั ะฟัะฐะบัะธัะตัะบะธั ะทะฐะดะฐะฝะธะน!"
echo ""
echo "๐ ะะปั ะพััะฐะฝะพะฒะบะธ: docker-compose down" 