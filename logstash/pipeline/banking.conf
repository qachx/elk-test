input {
  file {
    path => "/logs/*.json"
    start_position => "beginning"
    codec => "json"
    type => "banking-json"
  }
  
  file {
    path => "/logs/*.log"
    start_position => "beginning"
    type => "banking-text"
  }
}

filter {
  # Обработка JSON логов
  if [type] == "banking-json" {
    mutate {
      add_field => { "log_format" => "json" }
    }
    
    # Парсим timestamp
    date {
      match => [ "timestamp", "ISO8601" ]
    }
    
    # Добавляем geo информацию для IP адресов
    if [client_ip] {
      geoip {
        source => "client_ip"
        target => "geoip"
      }
    }
    
    # Классифицируем транзакции как подозрительные
    if [service] == "payment-service" {
      if [amount] and [amount] > 500000 {
        mutate { add_tag => ["suspicious_amount"] }
      }
      
      if [night_transaction] {
        mutate { add_tag => ["night_transaction"] }
      }
    }
    
    # Добавляем теги для fraud событий
    if [service] == "fraud-service" {
      mutate { add_tag => ["security_alert"] }
      
      if [risk_score] and [risk_score] > 80 {
        mutate { add_tag => ["high_risk"] }
      }
    }
  }
  
  # Обработка текстовых логов
  if [type] == "banking-text" {
    grok {
      match => { 
        "message" => "%{TIMESTAMP_ISO8601:timestamp} \[%{LOGLEVEL:level}\] %{DATA:service}: %{GREEDYDATA:message_text}" 
      }
    }
    
    date {
      match => [ "timestamp", "ISO8601" ]
    }
    
    mutate {
      add_field => { "log_format" => "text" }
    }
  }
  
  # Общие фильтры
  # Добавляем индекс в зависимости от сервиса
  if [service] == "auth-service" {
    mutate { add_field => { "index_suffix" => "auth" } }
  } else if [service] == "payment-service" {
    mutate { add_field => { "index_suffix" => "payments" } }
  } else if [service] == "fraud-service" {
    mutate { add_field => { "index_suffix" => "fraud" } }
  } else if [service] == "notification-service" {
    mutate { add_field => { "index_suffix" => "notifications" } }
  } else {
    mutate { add_field => { "index_suffix" => "general" } }
  }
  
  # Удаляем ненужные поля
  mutate {
    remove_field => [ "host", "path" ]
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "banking-logs-%{index_suffix}-%{+YYYY.MM.dd}"
    template_name => "banking-logs"
    template => "/usr/share/logstash/config/banking-template.json"
    template_overwrite => true
  }
  
  # Для отладки можно включить stdout
  # stdout { codec => rubydebug }
} 